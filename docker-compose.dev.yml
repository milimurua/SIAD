services:
  db:
    image: postgres:16-alpine
    container_name: seguros-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"        
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 15

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: insurance_api
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT:-3000}
      - JWT_SECRET=${JWT_SECRET}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS:-12}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev:docker
    volumes:
      - ./api:/app
      - /app/node_modules


volumes:
  pgdata:
